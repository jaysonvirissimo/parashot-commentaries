#!/usr/bin/env ruby

require 'aws-sdk-polly'
require 'aws-sdk-s3'
require 'fileutils'

# Configuration
REGION = 'us-east-1'
BUCKET_NAME = 'torah-commentary'
INPUT_FILE = File.expand_path('../../tmp/input.txt', __FILE__)

# Ensure AWS credentials are set up in your environment
# (via AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY or IAM roles if running on AWS)

# Read text from the input file
begin
  text = File.read(INPUT_FILE).strip
rescue Errno::ENOENT
  puts "Input file not found: #{INPUT_FILE}"
  exit 1
end

# Initialize the Polly client
polly = Aws::Polly::Client.new(region: REGION)

begin
  # Start Polly speech synthesis task
  response = polly.start_speech_synthesis_task({
    engine: 'generative',
    text: text,
    output_format: 'mp3',
    voice_id: 'Ruth',
    output_s3_bucket_name: BUCKET_NAME,
    output_s3_key_prefix: 'output/output.mp3'
  })

  task_id = response.synthesis_task.task_id
  puts "Started synthesis task with ID: #{task_id}"

  # Poll for task completion
  loop do
    task_status_response = polly.get_speech_synthesis_task({ task_id: task_id })
    task_status = task_status_response.synthesis_task.task_status

    puts "Task status: #{task_status}"

    case task_status
    when 'completed'
      puts "Synthesis task completed!"
      break
    when 'failed'
      puts "Task failed: #{task_status_response.synthesis_task.task_status_reason}"
      exit 1
    end

    sleep 10 # Wait for 10 seconds before checking again
  end

  # Extract the output file URI
  output_uri = response.synthesis_task.output_uri
  puts "Download your file here: #{output_uri}"
rescue Aws::Polly::Errors::ServiceError => e
  puts "An error occurred while calling AWS Polly: #{e.message}"
rescue Aws::S3::Errors::ServiceError => e
  puts "An error occurred while interacting with S3: #{e.message}"
end
